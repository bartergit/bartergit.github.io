{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.html","./src/app/app.component.ts","./src/app/app.html","./src/app/app.module.ts","./src/app/comp/comp.component.ts","./src/app/draw.ts","./src/app/maze/generators/AldousBroder.ts","./src/app/maze/generators/binaryTree.ts","./src/app/maze/generators/help.ts","./src/app/maze/generators/randomizedDepthFirstSearch.ts","./src/app/maze/generators/recursionDivision.ts","./src/app/maze/maze.ts","./src/app/maze/maze.html","./src/app/visualizer/sorter.ts","./src/app/visualizer/vis.ts","./src/app/visualizer/vis.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FaSymbol } from '@fortawesome/fontawesome-svg-core';\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.html',\n  styleUrls: ['./about.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"container\">\n  <div>\n    <h1 id=\"me\">Ivan Pozdnyakov</h1>\n    <img src=\"assets/img/me.jpg\">\n    <h2>Contacts and links</h2>\n    <p>\n      <a href=\"https://github.com/bartergit?tab=repositories\">GitHub</a>\n      <a href=\"https://t.me/B1arter\">Telegram</a>\n      <a href=\"mailto: aivanpozdnyakov@gmail.com\">Gmail</a>\n    </p>\n    <h1 class=\"tech\">Technologies</h1>\n    <h2>Languages:</h2>\n    <ul>\n      <li>Python: my core language, I have the most experience in it. Self educated with books, articles, videos and\n        stuff. Most of my student projects and pet-projects are made in Python. Love Python :3</li>\n    </ul>\n    <ul>\n      <li>C++. Very first language. It was taught in university for 2 years. I know the principals, but have a little\n        development experience.</li>\n    </ul>\n    <ul>\n      <li>Javascript. Mostly front-end, some knowledge about Svelte, Angular (this page for example) and React. </li>\n    </ul>\n    <ul>\n      <li>Other: I had university courses in Java, C#, PHP, Wolfram.</li>\n    </ul>\n    <h2>Other:</h2>\n    <ul>\n      <li>SQL basics. I actually designed a whole small database in pair with my group mate.</li>\n    </ul>\n    <ul>\n      <li>Familiar with Continuous Integration (Jenkinks).</li>\n    </ul>\n    <ul>\n      <li>Dockers essentials. Very basics. I&#x27;m familiar with Linux too.</li>\n    </ul>\n    <ul>\n      <li>I had my struggles with backend servers like Heroku, Google VM and so on.</li>\n    </ul>\n    <h1>My pet-projects:</h1>\n    <ul>\n      <li>\n        <h2>Chat app</h2>\n        <a href=\"https://github.com/bartergit/chat-app\">Github</a>\n        <a href=\"http://barter-chat-app-with-cringe.herokuapp.com/\">Try!</a>\n        <p>Languages: Python, JS </p>\n        <p>\n          Chat app, hosted on heroku.\n          Developed with <b>flask</b> as server, <b>svelte</b> as front-end (javascript library) and <b>psql</b>\n          database (pure, without\n          ORM).\n          <b>Socket-io</b> is used on both client and server side to emitting messages.\n        </p>\n      </li>\n      <li>\n        <h2>Algorithms</h2>\n        <a href=\"https://github.com/bartergit/algorithms\">Github</a>\n        <p>Languages: Python, Go, C++ </p>\n        <p>\n          Scripts for my algorithms classes. The following algorithms are implemented:\n          binary and interpolation search, quick sort, merge sort, hybrid sort,\n          algorithms for building, traversing and balancing a binary search tree,\n          various hashing algorithms,\n          solution of the Haino tower problem in the general case,\n          Conway's Game of Life,\n          construction of eulerian cycles,\n          determining if a graph is bipartite,\n          finding the shortest paths (Dijkstra, Floyd),\n          stable matching problem solution,\n          branch-and-bound solution to the traveling salesman problem (Little's algorithm),\n          minimal spanning tree (Prim's, Kruskal's algorithms),\n          erastofen sieve,\n          binary search,\n          and some others!\n        </p>\n      </li>\n      <li>\n        <h2>Tetris game</h2>\n        <a href=\"https://github.com/bartergit/tetris-typescript\">Github</a> <a\n          href=\"https://codepen.io/bartercodepen/full/zYKGreQ\">Try!</a>\n        <p>Language: Typescript</p>\n        <p>\n          Simple tetris app on pure typescript with canvas usage.\n        </p>\n      </li>\n      <li>\n        <h2>Computation geometry</h2>\n        <a href=\"https://github.com/bartergit/computational-geometry\">Github</a>\n        <p>Language: Python</p>\n        <p>\n          Some geometric algorithm visualization with <b>matplotlib</b>, for example,\n          different building convex hull approaches, detecting collision, detecting the 2 closest points (Divide and\n          conquer),\n          triangulation and some others.\n        </p>\n      </li>\n      <li>\n        <h2>Text generator</h2>\n        <a href=\"https://github.com/bartergit/computational-geometry\">Github</a> <a\n          href=\"https://docs.google.com/presentation/d/154AXvU_-pWtsDzvZ8GumDt0AqSuFoj-jOV43zLAFnNU/edit?usp=sharing\">Presentation</a>\n        <p>Language: Python</p>\n        <p>\n          Text generator with Markov chains usage and Pymorphy2 morphological analyzer.\n        </p>\n      </li>\n      <li>\n        <h2>Snake game</h2>\n        <a href=\"https://github.com/bartergit/svelte-snake\">Github</a> <a\n          href=\"https://codepen.io/bartercodepen/full/wvzGqQa\">Try!</a>\n        <p>Language: JS</p>\n        <p>\n          Simple svelte application on Svelte.\n        </p>\n      </li>\n    </ul>\n    <h1>English</h1>\n    <p>Not sure, somewhere in between B1-B2. I watch TV shows in\n      English and try to be better! </p>\n    <h1>Advantages</h1>\n    <ul>\n      <li>Sociable</li>\n    </ul>\n    <ul>\n      <li>Love to learn</li>\n    </ul>\n    <ul>\n      <li>Open-minded</li>\n    </ul>\n    <ul>\n      <li>Good at googling stuff</li>\n    </ul>\n    <h1>Disadvantages</h1>\n    <ul>\n      <li>Too hard working</li>\n    </ul>\n    <ul>\n      <li>Too handsome</li>\n    </ul>\n    <ul>\n      <li>Too boastful</li>\n    </ul>\n    <h1>Education</h1>\n    <p>I&#x27;m currently studying at BSU MMF for the 3rd course. My\n      specialty is &quot;Web-programming and Internet technologies&quot;. I&#x27;m In full time education, but trust\n      me, it will not be a problem, if you want to offer me a job.</p>\n    <p>\n    </p>\n    <h1>Experience</h1>\n    <p>I have completed several online courses, done some\n      freelance tasks for Upwork. I&#x27;m looking forward to a new experience!\n  </div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: \"./app.html\",\r\n  styleUrls: ['app.css']\r\n})\r\nexport class AppComponent {\r\n\tpage: string;\r\n\tconstructor(){\r\n\t\tthis.page = \"maze\";\r\n\t}\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\" animationDuration=\"0ms\">\r\n  <mat-tab label=\"Sort visualization\">\r\n    <visualizer></visualizer>\r\n  </mat-tab>\r\n  <mat-tab label=\"Maze generation\">\r\n    <maze-generator></maze-generator>\r\n  </mat-tab>\r\n  <mat-tab label=\"About me\">\r\n    <about></about>\r\n  </mat-tab>\r\n</mat-tab-group>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { Visualizer } from './visualizer/vis';\r\nimport { Maze } from './maze/maze';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { CompComponent } from './comp/comp.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MatInputModule } from '@angular/material/input';\r\n// import { NgxGistModule } from 'ngx-gist/dist/ngx-gist.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    Visualizer,\r\n    Maze,\r\n    CompComponent,\r\n    AboutComponent\r\n  ],\r\n  imports: [\r\n    FontAwesomeModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatTabsModule,\r\n    MatButtonModule,\r\n    MatSliderModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-comp',\r\n  template: `\r\n    <p>\r\n      comp works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class CompComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { ViewChild, ElementRef } from '@angular/core';\r\n\r\nexport abstract class Draw {\r\n  time: { start: number; elapsed: number; fps: number; };\r\n  @ViewChild('canvas', { static: true }) canvas: ElementRef;\r\n  ctx;\r\n  requestId: number;\r\n\r\n  constructor(fps: number) {\r\n    this.time = { start: 0, elapsed: 0, fps: 1000 / fps };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.ctx = this.canvas.nativeElement.getContext(\"2d\");\r\n    this.time.start = performance.now();\r\n    // this.animate();\r\n  }\r\n\r\n\r\n  abstract update(): void;\r\n\r\n  animate(): void {\r\n    this.time.elapsed += performance.now() - this.time.start;\r\n    this.draw(Math.min(this.time.elapsed / (this.time.fps), 1));\r\n    if (this.time.elapsed >= this.time.fps) {\r\n      this.time.elapsed = 0;\r\n      this.update();\r\n      //update\r\n    }\r\n    this.time.start = performance.now();\r\n    this.requestId = requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  abstract draw(progress: number): void;\r\n}","import { getRandomInt, stepsType, gridType } from './help'\nfunction getNearCells(grid: gridType, cell: [number, number]): [number, number] | null { // combine\n    let freeCells: Array<[number, number]> = [];\n    let i: number = cell[0];\n    let j: number = cell[1];\n    if (i + 1 < grid.length) {\n        freeCells.push([i + 1, j]);\n    }\n    if (j + 1 < grid[0].length) {\n        freeCells.push([i, j + 1]);\n    }\n    if (i - 1 >= 0) {\n        freeCells.push([i - 1, j]);\n    }\n    if (j - 1 >= 0) {\n        freeCells.push([i, j - 1]);\n    }\n    if (freeCells.length == 0)\n        return null;\n    return freeCells[getRandomInt(0, freeCells.length)];\n}\n\nexport function AldousBroder(N: number): stepsType {\n    let steps = [];\n    let grid = new Array(N);\n    for (let i = 0; i < N; i++) {\n        grid[i] = new Array(N);\n    }\n    grid[0][0] = true;\n    let cell: [number, number] = [0, 0];\n    let totalNumber = grid.length * grid[0].length - 1;\n    while (totalNumber != 0) {\n        let new_cell = getNearCells(grid, cell);\n        if (!grid[new_cell[0]][new_cell[1]]) {\n            grid[new_cell[0]][new_cell[1]] = true;\n            steps.push([cell, new_cell, true]);\n            totalNumber--;\n        }\n        cell = new_cell;\n    }\n    return steps;\n}","import { getRandomInt, stepsType, gridType } from './help'\nfunction getNearCells(grid: gridType, cell: [number, number]): [number, number] | null { // combine\n  let freeCells: Array<[number, number]> = [];\n  let i: number = cell[0];\n  let j: number = cell[1];\n  if (i + 1 < grid.length && grid[i + 1][j] != null) {\n    freeCells.push([i + 1, j]);\n  }\n  if (j + 1 < grid[0].length && grid[i][j + 1] != null) {\n    freeCells.push([i, j + 1]);\n  }\n  if (i - 1 >= 0 && grid[i - 1][j] != null) {\n    freeCells.push([i - 1, j]);\n  }\n  if (j - 1 >= 0 && grid[i][j - 1] != null) {\n    freeCells.push([i, j - 1]);\n  }\n  if (freeCells.length == 0)\n    return null;\n  return freeCells[getRandomInt(0, freeCells.length)];\n}\n\nexport function binaryTree(N: number): stepsType {\n  let steps = [];\n  let grid = new Array(N);\n  for (let i = 0; i < N; i++) {\n    grid[i] = new Array(N);\n  }\n  grid[0][0] = true;\n  steps.push([[0, 0], [0, 0], false]);  //start -> end, color, progressive: boolean\n  for (let i = 0; i < N; i++) {\n    for (let j = 0; j < N; j++) {\n      if (i == 0 && j == 0) {\n        continue;\n      } else {\n        let connected = getNearCells(grid, [i, j]);\n        steps.push([[i, j], [i, j], false]);\n        steps.push([[i, j], connected, true]);\n        grid[i][j] = true;\n      }\n    }\n  }\n  return steps;\n}","export function getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\n}\nexport type gridType = Array<Array<[number, number]>>;\nexport type stepsType = Array<[[number, number], [number, number], boolean]>;","import { getRandomInt, stepsType, gridType } from './help'\nfunction getNearCells(grid: gridType, cell: [number, number]): [number, number] | null {\n  let freeCells: Array<[number, number]> = [];\n  let i: number = cell[0];\n  let j: number = cell[1];\n  if (i + 1 < grid.length && grid[i + 1][j] == null) {\n    freeCells.push([i + 1, j]);\n  }\n  if (j + 1 < grid[0].length && grid[i][j + 1] == null) {\n    freeCells.push([i, j + 1]);\n  }\n  if (i - 1 >= 0 && grid[i - 1][j] == null) {\n    freeCells.push([i - 1, j]);\n  }\n  if (j - 1 >= 0 && grid[i][j - 1] == null) {\n    freeCells.push([i, j - 1]);\n  }\n  if (freeCells.length == 0)\n    return null;\n  return freeCells[getRandomInt(0, freeCells.length)];\n}\n\nfunction recursiveFunction(grid: gridType, cell: [number, number], steps: stepsType, n: number, i = 0) {\n  let nearCell = getNearCells(grid, cell);\n  i++;\n  if (nearCell == null) {\n    if (i > 2 * n * n) {\n      return;\n    }\n    else {\n      steps.push([cell, grid[cell[0]][cell[1]], false]);\n      recursiveFunction(grid, grid[cell[0]][cell[1]], steps, n, i);\n    }\n  }\n  else {\n    grid[nearCell[0]][nearCell[1]] = cell;\n    steps.push([cell, nearCell, true]);\n    recursiveFunction(grid, nearCell, steps, n, i);\n  }\n}\n\nexport function randomizedDepthFirstSearch(N: number): stepsType { //add correct end point\n  let steps = [];\n  let grid = new Array(N);\n  for (let i = 0; i < N; i++) {\n    grid[i] = new Array(N);\n  }\n  recursiveFunction(grid, [0, 0], steps, N);\n  return steps;\n}","import { getRandomInt, stepsType, gridType } from './help'\r\nfunction recursiveDivide(x1: number, x2: number, y1: number, y2: number, flag: boolean, steps: stepsType) {\r\n    const height = y2 - y1;\r\n    const width = x2 - x1;\r\n    if (height < 1) return;\r\n    if (width < 1) return;\r\n    flag = !flag;\r\n    if (flag) {\r\n        let h = getRandomInt(x1, x2);\r\n        let w = getRandomInt(y1, y2);\r\n        steps.push([[h, y1 - 1], [h, w], true])\r\n        steps.push([[h, w + 1], [h, y2], true])\r\n        recursiveDivide(x1, h, y1, y2, flag, steps);\r\n        recursiveDivide(h + 1, x2, y1, y2, flag, steps);\r\n    } else {\r\n        let h = getRandomInt(x1, x2);\r\n        let w = getRandomInt(y1, y2);\r\n        steps.push([[x1 - 1, w], [h, w], true])\r\n        steps.push([[h + 1, w], [x2, w], true])\r\n        recursiveDivide(x1, x2, y1, w, flag, steps);\r\n        recursiveDivide(x1, x2, w + 1, y2, flag, steps);\r\n    }\r\n}\r\n\r\nexport function recursionDivision(N: number): stepsType {\r\n    let steps = [];\r\n    recursiveDivide(0, N, 0, N, true, steps);\r\n    return steps;\r\n}","import { Component } from '@angular/core';\r\nimport { Draw } from '../draw';\r\nimport { recursionDivision } from \"./generators/recursionDivision\";\r\nimport { AldousBroder } from \"./generators/AldousBroder\";\r\nimport { binaryTree } from \"./generators/binaryTree\";\r\nimport { randomizedDepthFirstSearch } from \"./generators/randomizedDepthFirstSearch\";\r\n\r\n@Component({\r\n  selector: 'maze-generator',\r\n  templateUrl: './maze.html',\r\n  styleUrls: ['maze.css'],\r\n})\r\n\r\nexport class Maze extends Draw {\r\n  WIDTH: number;\r\n  defaultColor: string;\r\n  activeColor: string;\r\n  backgroundColor: string;\r\n  steps: Array<[[number, number], [number, number], boolean]>;\r\n  ind: number;\r\n  generationFunctions: ((N: number) => [[number, number], [number, number], boolean][])[];\r\n  currentFunc: { (arg0: number): [[number, number], [number, number], boolean][]; (N: number): [[number, number], [number, number], boolean][]; };\r\n  N: number;\r\n\r\n  constructor() {\r\n    super(7);\r\n    this.WIDTH = 500;\r\n    this.defaultColor = \"blue\";\r\n    this.activeColor = \"red\";\r\n    this.backgroundColor = \"white\";\r\n    this.N = 25;\r\n    this.ind = 0;\r\n    this.generationFunctions = [recursionDivision, AldousBroder, binaryTree, randomizedDepthFirstSearch];\r\n    this.currentFunc = this.generationFunctions[0];\r\n  }\r\n\r\n  changeN() {\r\n    this.N = Math.max(this.N, 5);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.ctx.canvas.width = this.WIDTH;\r\n    this.ctx.canvas.height = this.WIDTH;\r\n    this.steps = this.currentFunc(this.N);\r\n    // this.animate();\r\n  }\r\n\r\n  beginGeneration() {\r\n    this.ctx.fillStyle = this.backgroundColor;\r\n    this.ctx.fillRect(0, 0, this.WIDTH, this.WIDTH);\r\n    this.steps = this.currentFunc(this.N);\r\n    this.ind = 0;\r\n    this.animate();\r\n  }\r\n  do() {\r\n    console.log(3);\r\n  }\r\n\r\n  update() {\r\n    if (this.ind < this.steps.length - 1)\r\n      this.ind++;\r\n  }\r\n\r\n  drawCircle(x: number, y: number, radius: number) {\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  drawLine(x1: number, y1: number, x2: number, y2: number) {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x1, y1);\r\n    this.ctx.lineTo(x2, y2);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  draw(progress: number) {\r\n    this.ctx.fillStyle = this.backgroundColor;\r\n    // this.ctx.fillRect(0, 0, this.WIDTH, this.WIDTH);\r\n    this.ctx.fillStyle = (this.steps[this.ind][2]) ? this.defaultColor : this.activeColor;\r\n    let tunnel_width = this.WIDTH / (this.N * 2 + 1);\r\n    let offset = this.WIDTH / (this.N + 1);\r\n    let item = this.steps[this.ind][1];\r\n    let i = this.steps[this.ind][0][0];\r\n    let j = this.steps[this.ind][0][1];\r\n    let sign1 = (i > item[0]) ? 1 : -1;\r\n    let sign2 = (j > item[1]) ? 1 : -1;\r\n    if (item[0] != i) {\r\n      this.ctx.fillRect(offset * (i + 1) + sign1 * tunnel_width / 2, offset * (j + 1) + sign2 * tunnel_width / 2, (offset * (item[0] - i) - sign1 * tunnel_width) * progress, tunnel_width);\r\n    }\r\n    else {\r\n      this.ctx.fillRect(offset * (i + 1) + sign1 * tunnel_width / 2, offset * (j + 1) + sign2 * tunnel_width / 2, tunnel_width, (offset * (item[1] - j) - sign2 * tunnel_width) * progress);\r\n    }\r\n  }\r\n}","<div class=\"container\">\r\n\t<div class=\"inner-container\">\r\n\t\t<canvas style=\"border:3px lid black\" #canvas></canvas>\r\n\t</div>\r\n\t<div class=\"vertical\">\r\n\t\t<form>\r\n\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t<mat-label>Generation type</mat-label>\r\n\t\t\t\t<mat-select [(value)]=\"currentFunc\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let genFunc of generationFunctions\" [value]=\"genFunc\">\r\n\t\t\t\t\t\t{{genFunc.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t<mat-label>N</mat-label>\r\n\t\t\t\t<input (change)=\"changeN()\" name=\"n\" [(ngModel)]=\"N\" matInput type=\"number\" min=\"5\">\r\n\t\t\t</mat-form-field>\r\n\t\t</form>\r\n\t\t<div class=\"small-container\">\r\n\t\t\t<b>Speed</b>\r\n\t\t\t<mat-slider [(value)]=\"this.time.fps\" invert min=\"1\" max=\"600\" step=\"1\"></mat-slider>\r\n\t\t\t<button mat-raised-button color=\"warn\" (click)=\"this.beginGeneration()\">Begin</button>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- <ngx-gist [gistId]=\"'bartergit/52e52c89a57e5ccdf030695972e8f371'\"></ngx-gist> -->\r\n<!-- todo array size -->\r\n<!-- todo speed -->","type stepType = Array<[number, number, boolean]>;\r\nexport class Sorter {\r\n    static swap(array: number[], i: number, j: number) {\r\n        let temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n\r\n    static getRandomInt(min: number, max: number) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\r\n    }\r\n\r\n    static bubbleSort(originalArray: number[]) {\r\n        let array: number[] = originalArray.slice();\r\n        let steps: stepType = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            for (let j = 0; j < array.length - i - 1; j++) {\r\n                let cond = array[j + 1] < array[j];\r\n                if (cond) {\r\n                    Sorter.swap(array, j, j + 1);\r\n                    steps.push([j, j + 1, false]);\r\n                }\r\n                steps.push([j, j + 1, cond]);\r\n            }\r\n        }\r\n        return steps;\r\n    }\r\n\r\n    static insertionSort(originalArray: number[]): stepType {\r\n        let array: number[] = originalArray.slice();\r\n        let steps: stepType = [];\r\n        for (let i = 1; i < array.length; i++) {\r\n            let j = i;\r\n            steps.push([-1, i, false]);\r\n            let value = array[i];\r\n            while (j > 0 && array[j - 1] > value) {\r\n                array[j] = array[j - 1];\r\n                steps.push([i, j, false]);\r\n                steps.push([j, j - 1, true]);\r\n                j--;\r\n            }\r\n            array[j] = value;\r\n        }\r\n        return steps;\r\n    }\r\n\r\n\r\n    static selectionSort(originalArray: number[]): stepType {\r\n        let array: number[] = originalArray.slice();\r\n        let steps: stepType = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            let minimal_ind = i;\r\n            for (let j = i; j < array.length; j++) {\r\n                steps.push([j, minimal_ind, false])\r\n                if (array[j] < array[minimal_ind]) {\r\n                    minimal_ind = j;\r\n                }\r\n            }\r\n            Sorter.swap(array, minimal_ind, i);\r\n            steps.push([minimal_ind, i, true]);\r\n        }\r\n        return steps;\r\n    }\r\n\r\n    static merge(array: number[], start: number, end: number, steps: stepType): number[] {\r\n        let result: number[] = [];\r\n        let middle = ((start + end) / 2) | 0;\r\n        let i = start;\r\n        let j = middle + 1;\r\n        while (i <= middle && j <= end) {\r\n            if (array[i] < array[j]) {\r\n                result.push(array[i]);\r\n                i += 1;\r\n            } else {\r\n                result.push(array[j]);\r\n                j += 1;\r\n            }\r\n        }\r\n        while (i <= middle) {\r\n            result.push(array[i]);\r\n            i += 1;\r\n        }\r\n        while (j <= end) {\r\n            result.push(array[j]);\r\n            j += 1;\r\n        }\r\n        let ind = 0;\r\n        for (let i = start; i <= end; i++) {\r\n            steps.push([-1, i, false]);\r\n            array[i] = result[ind];\r\n            Sorter.tempArray.push(array.slice());\r\n            ind++;\r\n        }\r\n        return [start, end];\r\n    }\r\n    static tempArray = [];\r\n\r\n    static mergeSortRecursive(array: number[], start: number, end: number, steps: stepType): number[] {\r\n        if (end - start < 1) {\r\n            return [start, end];\r\n        } else {\r\n            let middle = ((start + end) / 2) | 0;\r\n            return Sorter.merge(array, Sorter.mergeSortRecursive(array, start, middle, steps)[0],\r\n                Sorter.mergeSortRecursive(array, middle + 1, end, steps)[1], steps);\r\n        }\r\n    }\r\n\r\n    static mergeSort(array: number[]): stepType {\r\n        let steps: stepType = [];\r\n        Sorter.tempArray = [];\r\n        Sorter.mergeSortRecursive(array.slice(), 0, array.length - 1, steps);\r\n        return steps;\r\n    }\r\n}\r\n","import { Component, ViewChild, ElementRef, Optional } from '@angular/core';\r\nimport { Sorter } from './sorter';\r\nimport { Draw } from '../draw';\r\n\r\n@Component({\r\n  selector: 'visualizer',\r\n  templateUrl: 'vis.html',\r\n  styleUrls: ['vis.css'],\r\n})\r\nexport class Visualizer extends Draw {\r\n  sortTypes: ((originalArray: number[]) => [number, number, boolean][])[];\r\n  array: number[];\r\n  steps: Array<[number, number, boolean]>;\r\n  ind: number;\r\n  WIDTH: number;\r\n  HEIGHT: number;\r\n  defaultColor: string;\r\n  activeColor: string;\r\n  backgroundColor: string;\r\n  n: number;\r\n  currentSort: ((originalArray: number[]) => [number, number, boolean][]);\r\n\r\n\r\n  shuffle() {\r\n    if (this.steps.length == 0) {\r\n      for (let i = 0; i < 30; i++) {\r\n        Sorter.swap(this.array, Sorter.getRandomInt(0, this.array.length), Sorter.getRandomInt(0, this.array.length));\r\n      }\r\n    }\r\n  }\r\n\r\n  generateArray() {\r\n    this.stop();\r\n    this.n = Math.max(this.n, 5);\r\n    this.array = [...Array(this.n).keys()].map(x => x + 1);\r\n    this.shuffle();\r\n  }\r\n\r\n  constructor() {\r\n    super(7);\r\n    this.sortTypes = [Sorter.bubbleSort, Sorter.insertionSort, Sorter.selectionSort, Sorter.mergeSort];\r\n    this.currentSort = this.sortTypes[3];\r\n    this.n = 100;\r\n    this.steps = [];\r\n    this.ind = 0;\r\n    this.generateArray();\r\n    this.WIDTH = 500;\r\n    this.HEIGHT = 250;\r\n    this.defaultColor = \"blue\";\r\n    this.activeColor = \"red\";\r\n    this.backgroundColor = \"black\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.ctx.canvas.width = this.WIDTH;\r\n    this.ctx.canvas.height = this.HEIGHT;\r\n    this.animate();\r\n  }\r\n\r\n\r\n  beginSort() {\r\n    this.steps = this.currentSort(this.array);\r\n    this.ind = 0;\r\n    this.animate();\r\n  }\r\n\r\n  stop() {\r\n    this.ind = 0;\r\n    this.steps = [];\r\n  }\r\n\r\n  update() {\r\n    if (this.ind <= this.steps.length - 1) {\r\n      if (this.currentSort == Sorter.mergeSort) {\r\n        this.array = Sorter.tempArray[this.ind];\r\n      }\r\n      else if (this.steps[this.ind][2]) {\r\n        Sorter.swap(this.array, this.steps[this.ind][0], this.steps[this.ind][1]);\r\n      }\r\n      this.ind++;\r\n    } else {\r\n      this.ind = 0;\r\n      this.steps = [];\r\n    }\r\n  }\r\n\r\n  offset() {\r\n    return this.ctx.canvas.width / (3 / 2 * this.array.length + 1 / 2);\r\n  }\r\n\r\n  calclulatePos(i: number, offset: number) {\r\n    return offset / 2 * (i + 1) + i * offset;\r\n  }\r\n\r\n  draw(progress: number) {\r\n    this.ctx.fillStyle = this.backgroundColor;\r\n    this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n    this.ctx.fillStyle = this.defaultColor;\r\n    let bottomOffset = 10;\r\n    let offset = this.WIDTH / (3 / 2 * this.array.length + 1 / 2);\r\n    let maxHeight = (this.HEIGHT - bottomOffset * 2) / Math.max.apply(null, this.array);\r\n\r\n    for (let i = 0; i < this.array.length; i++) {\r\n      if (this.ind > this.steps.length - 1 || i != this.steps[this.ind][0] && i != this.steps[this.ind][1]) {\r\n        this.ctx.fillRect(this.calclulatePos(i, offset), this.HEIGHT - bottomOffset, offset, -maxHeight * this.array[i]);\r\n      }\r\n      else if (this.steps[this.ind][2]) {\r\n        this.ctx.fillStyle = this.activeColor;\r\n        let another = (i == this.steps[this.ind][0]) ? this.steps[this.ind][1] : this.steps[this.ind][0];\r\n        let pos = this.calclulatePos(i, offset) + (this.calclulatePos(another, offset) - this.calclulatePos(i, offset)) * progress;\r\n        this.ctx.fillRect(pos, this.HEIGHT - bottomOffset, offset, -maxHeight * this.array[i]);\r\n        this.ctx.fillStyle = this.defaultColor;\r\n      } else {\r\n        this.ctx.fillStyle = this.activeColor;\r\n        this.ctx.fillRect(this.calclulatePos(i, offset), this.HEIGHT - bottomOffset, offset, -maxHeight * this.array[i]);\r\n        this.ctx.fillStyle = this.defaultColor;\r\n      }\r\n    }\r\n  }\r\n}","<div class=\"container\">\r\n\t<div class=\"inner-container\">\r\n\t\t<canvas #canvas></canvas>\r\n\t\t<div class=\"vertical\">\r\n\t\t\t<form>\r\n\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t<mat-label>Sort type</mat-label>\r\n\t\t\t\t\t<mat-select [(value)]=\"currentSort\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let sortType of sortTypes\" [value]=\"sortType\">\r\n\t\t\t\t\t\t\t{{sortType.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t<mat-label>N</mat-label>\r\n\t\t\t\t\t<input (change)=\"generateArray()\" name=\"n\" [(ngModel)]=\"n\" matInput type=\"number\" min=\"5\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</form>\r\n\t\t\t<div>\r\n\t\t\t\t<button mat-raised-button (click)=\"this.shuffle()\">Shuffle</button>\r\n\t\t\t\t<button mat-raised-button color=\"warn\" (click)=\"this.beginSort()\">Begin</button>\r\n\t\t\t\t<button mat-raised-button color=\"warn\" (click)=\"this.stop()\">Stop</button>\r\n\t\t\t\t<br>\r\n\t\t\t\t<b>Speed</b>\r\n\t\t\t\t<mat-slider [(value)]=\"this.time.fps\" invert min=\"0.01\" max=\"700\" step=\"1\"></mat-slider>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- <ngx-gist [gistId]=\"'bartergit/52e52c89a57e5ccdf030695972e8f371'\"></ngx-gist> -->\r\n<!-- todo array size -->\r\n<!-- todo speed -->","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}