{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.html","webpack:///src/app/app.module.ts","webpack:///src/app/comp/comp.component.ts","webpack:///src/app/draw.ts","webpack:///src/app/maze/generators/AldousBroder.ts","webpack:///src/app/maze/generators/binaryTree.ts","webpack:///src/app/maze/generators/help.ts","webpack:///src/app/maze/generators/randomizedDepthFirstSearch.ts","webpack:///src/app/maze/generators/recursionDivision.ts","webpack:///src/app/maze/maze.ts","webpack:///src/app/maze/maze.html","webpack:///src/app/visualizer/sorter.ts","webpack:///src/app/visualizer/vis.ts","webpack:///src/app/visualizer/vis.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","AppComponent","page","AppModule","provide","useValue","appearance","declarations","imports","providers","bootstrap","CompComponent","template","styles","Draw","fps","time","start","elapsed","ctx","canvas","nativeElement","getContext","performance","now","draw","Math","min","update","requestId","requestAnimationFrame","animate","bind","getNearCells","grid","cell","freeCells","i","j","length","push","AldousBroder","N","steps","Array","totalNumber","new_cell","binaryTree","connected","getRandomInt","max","ceil","floor","random","recursiveFunction","n","nearCell","randomizedDepthFirstSearch","recursiveDivide","x1","x2","y1","y2","flag","height","width","h","w","recursionDivision","Maze","WIDTH","defaultColor","activeColor","backgroundColor","ind","generationFunctions","currentFunc","fillStyle","fillRect","console","log","x","y","radius","beginPath","arc","PI","stroke","moveTo","lineTo","progress","tunnel_width","offset","item","sign1","sign2","changeN","Sorter","array","temp","originalArray","slice","cond","swap","value","minimal_ind","end","result","middle","tempArray","merge","mergeSortRecursive","Visualizer","sortTypes","bubbleSort","insertionSort","selectionSort","mergeSort","currentSort","generateArray","HEIGHT","stop","map","shuffle","clearRect","bottomOffset","maxHeight","apply","calclulatePos","another","pos","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FaSymbol } from '@fortawesome/fontawesome-svg-core';\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.html',\n  styleUrls: ['./about.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"container\">\n  <div>\n    <h1 id=\"me\">Ivan Pozdnyakov</h1>\n    <img src=\"assets/img/me.jpg\">\n    <h2>Contacts and links</h2>\n    <p>\n      <a href=\"https://github.com/bartergit?tab=repositories\">GitHub</a>\n      <a href=\"https://t.me/B1arter\">Telegram</a>\n      <a href=\"mailto: aivanpozdnyakov@gmail.com\">Gmail</a>\n    </p>\n    <h1 class=\"tech\">Technologies</h1>\n    <h2>Languages:</h2>\n    <ul>\n      <li>Python: my core language, I have the most experience in it. Self educated with books, articles, videos and\n        stuff. Most of my student projects and pet-projects are made in Python. Love Python :3</li>\n    </ul>\n    <ul>\n      <li>C++. Very first language. It was taught in university for 2 years. I know the principals, but have a little\n        development experience.</li>\n    </ul>\n    <ul>\n      <li>Javascript. Mostly front-end, some knowledge about Svelte, Angular (this page for example) and React. </li>\n    </ul>\n    <ul>\n      <li>Other: I had university courses in Java, C#, PHP, Wolfram.</li>\n    </ul>\n    <h2>Other:</h2>\n    <ul>\n      <li>SQL basics. I actually designed a whole small database in pair with my group mate.</li>\n    </ul>\n    <ul>\n      <li>Familiar with Continuous Integration (Jenkinks).</li>\n    </ul>\n    <ul>\n      <li>Dockers essentials. Very basics. I&#x27;m familiar with Linux too.</li>\n    </ul>\n    <ul>\n      <li>I had my struggles with backend servers like Heroku, Google VM and so on.</li>\n    </ul>\n    <h1>My pet-projects:</h1>\n    <ul>\n      <li>\n        <h2>Chat app</h2>\n        <a href=\"https://github.com/bartergit/chat-app\">Github</a>\n        <a href=\"http://barter-chat-app-with-cringe.herokuapp.com/\">Try!</a>\n        <p>Languages: Python, JS </p>\n        <p>\n          Chat app, hosted on heroku.\n          Developed with <b>flask</b> as server, <b>svelte</b> as front-end (javascript library) and <b>psql</b>\n          database (pure, without\n          ORM).\n          <b>Socket-io</b> is used on both client and server side to emitting messages.\n        </p>\n      </li>\n      <li>\n        <h2>Algorithms</h2>\n        <a href=\"https://github.com/bartergit/algorithms\">Github</a>\n        <p>Languages: Python, Go, C++ </p>\n        <p>\n          Scripts for my algorithms classes. The following algorithms are implemented:\n          binary and interpolation search, quick sort, merge sort, hybrid sort,\n          algorithms for building, traversing and balancing a binary search tree,\n          various hashing algorithms,\n          solution of the Haino tower problem in the general case,\n          Conway's Game of Life,\n          construction of eulerian cycles,\n          determining if a graph is bipartite,\n          finding the shortest paths (Dijkstra, Floyd),\n          stable matching problem solution,\n          branch-and-bound solution to the traveling salesman problem (Little's algorithm),\n          minimal spanning tree (Prim's, Kruskal's algorithms),\n          erastofen sieve,\n          binary search,\n          and some others!\n        </p>\n      </li>\n      <li>\n        <h2>Tetris game</h2>\n        <a href=\"https://github.com/bartergit/tetris-typescript\">Github</a> <a\n          href=\"https://codepen.io/bartercodepen/full/zYKGreQ\">Try!</a>\n        <p>Language: Typescript</p>\n        <p>\n          Simple tetris app on pure typescript with canvas usage.\n        </p>\n      </li>\n      <li>\n        <h2>Computation geometry</h2>\n        <a href=\"https://github.com/bartergit/computational-geometry\">Github</a>\n        <p>Language: Python</p>\n        <p>\n          Some geometric algorithm visualization with <b>matplotlib</b>, for example,\n          different building convex hull approaches, detecting collision, detecting the 2 closest points (Divide and\n          conquer),\n          triangulation and some others.\n        </p>\n      </li>\n      <li>\n        <h2>Text generator</h2>\n        <a href=\"https://github.com/bartergit/computational-geometry\">Github</a> <a\n          href=\"https://docs.google.com/presentation/d/154AXvU_-pWtsDzvZ8GumDt0AqSuFoj-jOV43zLAFnNU/edit?usp=sharing\">Presentation</a>\n        <p>Language: Python</p>\n        <p>\n          Text generator with Markov chains usage and Pymorphy2 morphological analyzer.\n        </p>\n      </li>\n      <li>\n        <h2>Snake game</h2>\n        <a href=\"https://github.com/bartergit/svelte-snake\">Github</a> <a\n          href=\"https://codepen.io/bartercodepen/full/wvzGqQa\">Try!</a>\n        <p>Language: JS</p>\n        <p>\n          Simple svelte application on Svelte.\n        </p>\n      </li>\n    </ul>\n    <h1>English</h1>\n    <p>Not sure, somewhere in between B1-B2. I watch TV shows in\n      English and try to be better! </p>\n    <h1>Advantages</h1>\n    <ul>\n      <li>Sociable</li>\n    </ul>\n    <ul>\n      <li>Love to learn</li>\n    </ul>\n    <ul>\n      <li>Open-minded</li>\n    </ul>\n    <ul>\n      <li>Good at googling stuff</li>\n    </ul>\n    <h1>Disadvantages</h1>\n    <ul>\n      <li>Too hard working</li>\n    </ul>\n    <ul>\n      <li>Too handsome</li>\n    </ul>\n    <ul>\n      <li>Too boastful</li>\n    </ul>\n    <h1>Education</h1>\n    <p>I&#x27;m currently studying at BSU MMF for the 3rd course. My\n      specialty is &quot;Web-programming and Internet technologies&quot;. I&#x27;m In full time education, but trust\n      me, it will not be a problem, if you want to offer me a job.</p>\n    <p>\n    </p>\n    <h1>Experience</h1>\n    <p>I have completed several online courses, done some\n      freelance tasks for Upwork. I&#x27;m looking forward to a new experience!\n  </div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: \"./app.html\",\r\n  styleUrls: ['app.css']\r\n})\r\nexport class AppComponent {\r\n\tpage: string;\r\n\tconstructor(){\r\n\t\tthis.page = \"maze\";\r\n\t}\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\" animationDuration=\"0ms\">\r\n  <mat-tab label=\"Sort visualization\">\r\n    <visualizer></visualizer>\r\n  </mat-tab>\r\n  <mat-tab label=\"Maze generation\">\r\n    <maze-generator></maze-generator>\r\n  </mat-tab>\r\n  <mat-tab label=\"About me\">\r\n    <about></about>\r\n  </mat-tab>\r\n</mat-tab-group>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { Visualizer } from './visualizer/vis';\r\nimport { Maze } from './maze/maze';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { CompComponent } from './comp/comp.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MatInputModule } from '@angular/material/input';\r\n// import { NgxGistModule } from 'ngx-gist/dist/ngx-gist.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    Visualizer,\r\n    Maze,\r\n    CompComponent,\r\n    AboutComponent\r\n  ],\r\n  imports: [\r\n    FontAwesomeModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatTabsModule,\r\n    MatButtonModule,\r\n    MatSliderModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-comp',\r\n  template: `\r\n    <p>\r\n      comp works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class CompComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { ViewChild, ElementRef } from '@angular/core';\r\n\r\nexport abstract class Draw {\r\n  time: { start: number; elapsed: number; fps: number; };\r\n  @ViewChild('canvas', { static: true }) canvas: ElementRef;\r\n  ctx;\r\n  requestId: number;\r\n\r\n  constructor(fps: number) {\r\n    this.time = { start: 0, elapsed: 0, fps: 1000 / fps };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.ctx = this.canvas.nativeElement.getContext(\"2d\");\r\n    this.time.start = performance.now();\r\n    // this.animate();\r\n  }\r\n\r\n\r\n  abstract update(): void;\r\n\r\n  animate(): void {\r\n    this.time.elapsed += performance.now() - this.time.start;\r\n    this.draw(Math.min(this.time.elapsed / (this.time.fps), 1));\r\n    if (this.time.elapsed >= this.time.fps) {\r\n      this.time.elapsed = 0;\r\n      this.update();\r\n      //update\r\n    }\r\n    this.time.start = performance.now();\r\n    this.requestId = requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  abstract draw(progress: number): void;\r\n}","import { getRandomInt, stepsType, gridType } from './help'\nfunction getNearCells(grid: gridType, cell: [number, number]): [number, number] | null { // combine\n    let freeCells: Array<[number, number]> = [];\n    let i: number = cell[0];\n    let j: number = cell[1];\n    if (i + 1 < grid.length) {\n        freeCells.push([i + 1, j]);\n    }\n    if (j + 1 < grid[0].length) {\n        freeCells.push([i, j + 1]);\n    }\n    if (i - 1 >= 0) {\n        freeCells.push([i - 1, j]);\n    }\n    if (j - 1 >= 0) {\n        freeCells.push([i, j - 1]);\n    }\n    if (freeCells.length == 0)\n        return null;\n    return freeCells[getRandomInt(0, freeCells.length)];\n}\n\nexport function AldousBroder(N: number): stepsType {\n    let steps = [];\n    let grid = new Array(N);\n    for (let i = 0; i < N; i++) {\n        grid[i] = new Array(N);\n    }\n    grid[0][0] = true;\n    let cell: [number, number] = [0, 0];\n    let totalNumber = grid.length * grid[0].length - 1;\n    while (totalNumber != 0) {\n        let new_cell = getNearCells(grid, cell);\n        if (!grid[new_cell[0]][new_cell[1]]) {\n            grid[new_cell[0]][new_cell[1]] = true;\n            steps.push([cell, new_cell, true]);\n            totalNumber--;\n        }\n        cell = new_cell;\n    }\n    return steps;\n}","import { getRandomInt, stepsType, gridType } from './help'\nfunction getNearCells(grid: gridType, cell: [number, number]): [number, number] | null { // combine\n  let freeCells: Array<[number, number]> = [];\n  let i: number = cell[0];\n  let j: number = cell[1];\n  if (i + 1 < grid.length && grid[i + 1][j] != null) {\n    freeCells.push([i + 1, j]);\n  }\n  if (j + 1 < grid[0].length && grid[i][j + 1] != null) {\n    freeCells.push([i, j + 1]);\n  }\n  if (i - 1 >= 0 && grid[i - 1][j] != null) {\n    freeCells.push([i - 1, j]);\n  }\n  if (j - 1 >= 0 && grid[i][j - 1] != null) {\n    freeCells.push([i, j - 1]);\n  }\n  if (freeCells.length == 0)\n    return null;\n  return freeCells[getRandomInt(0, freeCells.length)];\n}\n\nexport function binaryTree(N: number): stepsType {\n  let steps = [];\n  let grid = new Array(N);\n  for (let i = 0; i < N; i++) {\n    grid[i] = new Array(N);\n  }\n  grid[0][0] = true;\n  steps.push([[0, 0], [0, 0], false]);  //start -> end, color, progressive: boolean\n  for (let i = 0; i < N; i++) {\n    for (let j = 0; j < N; j++) {\n      if (i == 0 && j == 0) {\n        continue;\n      } else {\n        let connected = getNearCells(grid, [i, j]);\n        steps.push([[i, j], [i, j], false]);\n        steps.push([[i, j], connected, true]);\n        grid[i][j] = true;\n      }\n    }\n  }\n  return steps;\n}","export function getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\n}\nexport type gridType = Array<Array<[number, number]>>;\nexport type stepsType = Array<[[number, number], [number, number], boolean]>;","import { getRandomInt, stepsType, gridType } from './help'\nfunction getNearCells(grid: gridType, cell: [number, number]): [number, number] | null {\n  let freeCells: Array<[number, number]> = [];\n  let i: number = cell[0];\n  let j: number = cell[1];\n  if (i + 1 < grid.length && grid[i + 1][j] == null) {\n    freeCells.push([i + 1, j]);\n  }\n  if (j + 1 < grid[0].length && grid[i][j + 1] == null) {\n    freeCells.push([i, j + 1]);\n  }\n  if (i - 1 >= 0 && grid[i - 1][j] == null) {\n    freeCells.push([i - 1, j]);\n  }\n  if (j - 1 >= 0 && grid[i][j - 1] == null) {\n    freeCells.push([i, j - 1]);\n  }\n  if (freeCells.length == 0)\n    return null;\n  return freeCells[getRandomInt(0, freeCells.length)];\n}\n\nfunction recursiveFunction(grid: gridType, cell: [number, number], steps: stepsType, n: number, i = 0) {\n  let nearCell = getNearCells(grid, cell);\n  i++;\n  if (nearCell == null) {\n    if (i > 2 * n * n) {\n      return;\n    }\n    else {\n      steps.push([cell, grid[cell[0]][cell[1]], false]);\n      recursiveFunction(grid, grid[cell[0]][cell[1]], steps, n, i);\n    }\n  }\n  else {\n    grid[nearCell[0]][nearCell[1]] = cell;\n    steps.push([cell, nearCell, true]);\n    recursiveFunction(grid, nearCell, steps, n, i);\n  }\n}\n\nexport function randomizedDepthFirstSearch(N: number): stepsType { //add correct end point\n  let steps = [];\n  let grid = new Array(N);\n  for (let i = 0; i < N; i++) {\n    grid[i] = new Array(N);\n  }\n  recursiveFunction(grid, [0, 0], steps, N);\n  return steps;\n}","import { getRandomInt, stepsType, gridType } from './help'\r\nfunction recursiveDivide(x1: number, x2: number, y1: number, y2: number, flag: boolean, steps: stepsType) {\r\n    const height = y2 - y1;\r\n    const width = x2 - x1;\r\n    if (height < 1) return;\r\n    if (width < 1) return;\r\n    flag = !flag;\r\n    if (flag) {\r\n        let h = getRandomInt(x1, x2);\r\n        let w = getRandomInt(y1, y2);\r\n        steps.push([[h, y1 - 1], [h, w], true])\r\n        steps.push([[h, w + 1], [h, y2], true])\r\n        recursiveDivide(x1, h, y1, y2, flag, steps);\r\n        recursiveDivide(h + 1, x2, y1, y2, flag, steps);\r\n    } else {\r\n        let h = getRandomInt(x1, x2);\r\n        let w = getRandomInt(y1, y2);\r\n        steps.push([[x1 - 1, w], [h, w], true])\r\n        steps.push([[h + 1, w], [x2, w], true])\r\n        recursiveDivide(x1, x2, y1, w, flag, steps);\r\n        recursiveDivide(x1, x2, w + 1, y2, flag, steps);\r\n    }\r\n}\r\n\r\nexport function recursionDivision(N: number): stepsType {\r\n    let steps = [];\r\n    recursiveDivide(0, N, 0, N, true, steps);\r\n    return steps;\r\n}","import { Component } from '@angular/core';\r\nimport { Draw } from '../draw';\r\nimport { recursionDivision } from \"./generators/recursionDivision\";\r\nimport { AldousBroder } from \"./generators/AldousBroder\";\r\nimport { binaryTree } from \"./generators/binaryTree\";\r\nimport { randomizedDepthFirstSearch } from \"./generators/randomizedDepthFirstSearch\";\r\n\r\n@Component({\r\n  selector: 'maze-generator',\r\n  templateUrl: './maze.html',\r\n  styleUrls: ['maze.css'],\r\n})\r\n\r\nexport class Maze extends Draw {\r\n  WIDTH: number;\r\n  defaultColor: string;\r\n  activeColor: string;\r\n  backgroundColor: string;\r\n  steps: Array<[[number, number], [number, number], boolean]>;\r\n  ind: number;\r\n  generationFunctions: ((N: number) => [[number, number], [number, number], boolean][])[];\r\n  currentFunc: { (arg0: number): [[number, number], [number, number], boolean][]; (N: number): [[number, number], [number, number], boolean][]; };\r\n  N: number;\r\n\r\n  constructor() {\r\n    super(7);\r\n    this.WIDTH = 500;\r\n    this.defaultColor = \"blue\";\r\n    this.activeColor = \"red\";\r\n    this.backgroundColor = \"white\";\r\n    this.N = 25;\r\n    this.ind = 0;\r\n    this.generationFunctions = [recursionDivision, AldousBroder, binaryTree, randomizedDepthFirstSearch];\r\n    this.currentFunc = this.generationFunctions[0];\r\n  }\r\n\r\n  changeN() {\r\n    this.N = Math.max(this.N, 5);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.ctx.canvas.width = this.WIDTH;\r\n    this.ctx.canvas.height = this.WIDTH;\r\n    this.steps = this.currentFunc(this.N);\r\n    // this.animate();\r\n  }\r\n\r\n  beginGeneration() {\r\n    this.ctx.fillStyle = this.backgroundColor;\r\n    this.ctx.fillRect(0, 0, this.WIDTH, this.WIDTH);\r\n    this.steps = this.currentFunc(this.N);\r\n    this.ind = 0;\r\n    this.animate();\r\n  }\r\n  do() {\r\n    console.log(3);\r\n  }\r\n\r\n  update() {\r\n    if (this.ind < this.steps.length - 1)\r\n      this.ind++;\r\n  }\r\n\r\n  drawCircle(x: number, y: number, radius: number) {\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  drawLine(x1: number, y1: number, x2: number, y2: number) {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x1, y1);\r\n    this.ctx.lineTo(x2, y2);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  draw(progress: number) {\r\n    this.ctx.fillStyle = this.backgroundColor;\r\n    // this.ctx.fillRect(0, 0, this.WIDTH, this.WIDTH);\r\n    this.ctx.fillStyle = (this.steps[this.ind][2]) ? this.defaultColor : this.activeColor;\r\n    let tunnel_width = this.WIDTH / (this.N * 2 + 1);\r\n    let offset = this.WIDTH / (this.N + 1);\r\n    let item = this.steps[this.ind][1];\r\n    let i = this.steps[this.ind][0][0];\r\n    let j = this.steps[this.ind][0][1];\r\n    let sign1 = (i > item[0]) ? 1 : -1;\r\n    let sign2 = (j > item[1]) ? 1 : -1;\r\n    if (item[0] != i) {\r\n      this.ctx.fillRect(offset * (i + 1) + sign1 * tunnel_width / 2, offset * (j + 1) + sign2 * tunnel_width / 2, (offset * (item[0] - i) - sign1 * tunnel_width) * progress, tunnel_width);\r\n    }\r\n    else {\r\n      this.ctx.fillRect(offset * (i + 1) + sign1 * tunnel_width / 2, offset * (j + 1) + sign2 * tunnel_width / 2, tunnel_width, (offset * (item[1] - j) - sign2 * tunnel_width) * progress);\r\n    }\r\n  }\r\n}","<div class=\"container\">\r\n\t<div class=\"inner-container\">\r\n\t\t<canvas style=\"border:3px lid black\" #canvas></canvas>\r\n\t</div>\r\n\t<div class=\"vertical\">\r\n\t\t<form>\r\n\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t<mat-label>Generation type</mat-label>\r\n\t\t\t\t<mat-select [(value)]=\"currentFunc\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let genFunc of generationFunctions\" [value]=\"genFunc\">\r\n\t\t\t\t\t\t{{genFunc.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t<mat-label>N</mat-label>\r\n\t\t\t\t<input (change)=\"changeN()\" name=\"n\" [(ngModel)]=\"N\" matInput type=\"number\" min=\"5\">\r\n\t\t\t</mat-form-field>\r\n\t\t</form>\r\n\t\t<div class=\"small-container\">\r\n\t\t\t<b>Speed</b>\r\n\t\t\t<mat-slider [(value)]=\"this.time.fps\" invert min=\"1\" max=\"600\" step=\"1\"></mat-slider>\r\n\t\t\t<button mat-raised-button color=\"warn\" (click)=\"this.beginGeneration()\">Begin</button>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- <ngx-gist [gistId]=\"'bartergit/52e52c89a57e5ccdf030695972e8f371'\"></ngx-gist> -->\r\n<!-- todo array size -->\r\n<!-- todo speed -->","type stepType = Array<[number, number, boolean]>;\r\nexport class Sorter {\r\n    static swap(array: number[], i: number, j: number) {\r\n        let temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n\r\n    static getRandomInt(min: number, max: number) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\r\n    }\r\n\r\n    static bubbleSort(originalArray: number[]) {\r\n        let array: number[] = originalArray.slice();\r\n        let steps: stepType = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            for (let j = 0; j < array.length - i - 1; j++) {\r\n                let cond = array[j + 1] < array[j];\r\n                if (cond) {\r\n                    Sorter.swap(array, j, j + 1);\r\n                    steps.push([j, j + 1, false]);\r\n                }\r\n                steps.push([j, j + 1, cond]);\r\n            }\r\n        }\r\n        return steps;\r\n    }\r\n\r\n    static insertionSort(originalArray: number[]): stepType {\r\n        let array: number[] = originalArray.slice();\r\n        let steps: stepType = [];\r\n        for (let i = 1; i < array.length; i++) {\r\n            let j = i;\r\n            steps.push([-1, i, false]);\r\n            let value = array[i];\r\n            while (j > 0 && array[j - 1] > value) {\r\n                array[j] = array[j - 1];\r\n                steps.push([i, j, false]);\r\n                steps.push([j, j - 1, true]);\r\n                j--;\r\n            }\r\n            array[j] = value;\r\n        }\r\n        return steps;\r\n    }\r\n\r\n\r\n    static selectionSort(originalArray: number[]): stepType {\r\n        let array: number[] = originalArray.slice();\r\n        let steps: stepType = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            let minimal_ind = i;\r\n            for (let j = i; j < array.length; j++) {\r\n                steps.push([j, minimal_ind, false])\r\n                if (array[j] < array[minimal_ind]) {\r\n                    minimal_ind = j;\r\n                }\r\n            }\r\n            Sorter.swap(array, minimal_ind, i);\r\n            steps.push([minimal_ind, i, true]);\r\n        }\r\n        return steps;\r\n    }\r\n\r\n    static merge(array: number[], start: number, end: number, steps: stepType): number[] {\r\n        let result: number[] = [];\r\n        let middle = ((start + end) / 2) | 0;\r\n        let i = start;\r\n        let j = middle + 1;\r\n        while (i <= middle && j <= end) {\r\n            if (array[i] < array[j]) {\r\n                result.push(array[i]);\r\n                i += 1;\r\n            } else {\r\n                result.push(array[j]);\r\n                j += 1;\r\n            }\r\n        }\r\n        while (i <= middle) {\r\n            result.push(array[i]);\r\n            i += 1;\r\n        }\r\n        while (j <= end) {\r\n            result.push(array[j]);\r\n            j += 1;\r\n        }\r\n        let ind = 0;\r\n        for (let i = start; i <= end; i++) {\r\n            steps.push([-1, i, false]);\r\n            array[i] = result[ind];\r\n            Sorter.tempArray.push(array.slice());\r\n            ind++;\r\n        }\r\n        return [start, end];\r\n    }\r\n    static tempArray = [];\r\n\r\n    static mergeSortRecursive(array: number[], start: number, end: number, steps: stepType): number[] {\r\n        if (end - start < 1) {\r\n            return [start, end];\r\n        } else {\r\n            let middle = ((start + end) / 2) | 0;\r\n            return Sorter.merge(array, Sorter.mergeSortRecursive(array, start, middle, steps)[0],\r\n                Sorter.mergeSortRecursive(array, middle + 1, end, steps)[1], steps);\r\n        }\r\n    }\r\n\r\n    static mergeSort(array: number[]): stepType {\r\n        let steps: stepType = [];\r\n        Sorter.tempArray = [];\r\n        Sorter.mergeSortRecursive(array.slice(), 0, array.length - 1, steps);\r\n        return steps;\r\n    }\r\n}\r\n","import { Component, ViewChild, ElementRef, Optional } from '@angular/core';\r\nimport { Sorter } from './sorter';\r\nimport { Draw } from '../draw';\r\n\r\n@Component({\r\n  selector: 'visualizer',\r\n  templateUrl: 'vis.html',\r\n  styleUrls: ['vis.css'],\r\n})\r\nexport class Visualizer extends Draw {\r\n  sortTypes: ((originalArray: number[]) => [number, number, boolean][])[];\r\n  array: number[];\r\n  steps: Array<[number, number, boolean]>;\r\n  ind: number;\r\n  WIDTH: number;\r\n  HEIGHT: number;\r\n  defaultColor: string;\r\n  activeColor: string;\r\n  backgroundColor: string;\r\n  n: number;\r\n  currentSort: ((originalArray: number[]) => [number, number, boolean][]);\r\n\r\n\r\n  shuffle() {\r\n    if (this.steps.length == 0) {\r\n      for (let i = 0; i < 30; i++) {\r\n        Sorter.swap(this.array, Sorter.getRandomInt(0, this.array.length), Sorter.getRandomInt(0, this.array.length));\r\n      }\r\n    }\r\n  }\r\n\r\n  generateArray() {\r\n    this.stop();\r\n    this.n = Math.max(this.n, 5);\r\n    this.array = [...Array(this.n).keys()].map(x => x + 1);\r\n    this.shuffle();\r\n  }\r\n\r\n  constructor() {\r\n    super(7);\r\n    this.sortTypes = [Sorter.bubbleSort, Sorter.insertionSort, Sorter.selectionSort, Sorter.mergeSort];\r\n    this.currentSort = this.sortTypes[3];\r\n    this.n = 100;\r\n    this.steps = [];\r\n    this.ind = 0;\r\n    this.generateArray();\r\n    this.WIDTH = 500;\r\n    this.HEIGHT = 250;\r\n    this.defaultColor = \"blue\";\r\n    this.activeColor = \"red\";\r\n    this.backgroundColor = \"black\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.ctx.canvas.width = this.WIDTH;\r\n    this.ctx.canvas.height = this.HEIGHT;\r\n    this.animate();\r\n  }\r\n\r\n\r\n  beginSort() {\r\n    this.steps = this.currentSort(this.array);\r\n    this.ind = 0;\r\n    this.animate();\r\n  }\r\n\r\n  stop() {\r\n    this.ind = 0;\r\n    this.steps = [];\r\n  }\r\n\r\n  update() {\r\n    if (this.ind <= this.steps.length - 1) {\r\n      if (this.currentSort == Sorter.mergeSort) {\r\n        this.array = Sorter.tempArray[this.ind];\r\n      }\r\n      else if (this.steps[this.ind][2]) {\r\n        Sorter.swap(this.array, this.steps[this.ind][0], this.steps[this.ind][1]);\r\n      }\r\n      this.ind++;\r\n    } else {\r\n      this.ind = 0;\r\n      this.steps = [];\r\n    }\r\n  }\r\n\r\n  offset() {\r\n    return this.ctx.canvas.width / (3 / 2 * this.array.length + 1 / 2);\r\n  }\r\n\r\n  calclulatePos(i: number, offset: number) {\r\n    return offset / 2 * (i + 1) + i * offset;\r\n  }\r\n\r\n  draw(progress: number) {\r\n    this.ctx.fillStyle = this.backgroundColor;\r\n    this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n    this.ctx.fillStyle = this.defaultColor;\r\n    let bottomOffset = 10;\r\n    let offset = this.WIDTH / (3 / 2 * this.array.length + 1 / 2);\r\n    let maxHeight = (this.HEIGHT - bottomOffset * 2) / Math.max.apply(null, this.array);\r\n\r\n    for (let i = 0; i < this.array.length; i++) {\r\n      if (this.ind > this.steps.length - 1 || i != this.steps[this.ind][0] && i != this.steps[this.ind][1]) {\r\n        this.ctx.fillRect(this.calclulatePos(i, offset), this.HEIGHT - bottomOffset, offset, -maxHeight * this.array[i]);\r\n      }\r\n      else if (this.steps[this.ind][2]) {\r\n        this.ctx.fillStyle = this.activeColor;\r\n        let another = (i == this.steps[this.ind][0]) ? this.steps[this.ind][1] : this.steps[this.ind][0];\r\n        let pos = this.calclulatePos(i, offset) + (this.calclulatePos(another, offset) - this.calclulatePos(i, offset)) * progress;\r\n        this.ctx.fillRect(pos, this.HEIGHT - bottomOffset, offset, -maxHeight * this.array[i]);\r\n        this.ctx.fillStyle = this.defaultColor;\r\n      } else {\r\n        this.ctx.fillStyle = this.activeColor;\r\n        this.ctx.fillRect(this.calclulatePos(i, offset), this.HEIGHT - bottomOffset, offset, -maxHeight * this.array[i]);\r\n        this.ctx.fillStyle = this.defaultColor;\r\n      }\r\n    }\r\n  }\r\n}","<div class=\"container\">\r\n\t<div class=\"inner-container\">\r\n\t\t<canvas #canvas></canvas>\r\n\t\t<div class=\"vertical\">\r\n\t\t\t<form>\r\n\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t<mat-label>Sort type</mat-label>\r\n\t\t\t\t\t<mat-select [(value)]=\"currentSort\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let sortType of sortTypes\" [value]=\"sortType\">\r\n\t\t\t\t\t\t\t{{sortType.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t<mat-label>N</mat-label>\r\n\t\t\t\t\t<input (change)=\"generateArray()\" name=\"n\" [(ngModel)]=\"n\" matInput type=\"number\" min=\"5\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</form>\r\n\t\t\t<div>\r\n\t\t\t\t<button mat-raised-button (click)=\"this.shuffle()\">Shuffle</button>\r\n\t\t\t\t<button mat-raised-button color=\"warn\" (click)=\"this.beginSort()\">Begin</button>\r\n\t\t\t\t<button mat-raised-button color=\"warn\" (click)=\"this.stop()\">Stop</button>\r\n\t\t\t\t<br>\r\n\t\t\t\t<b>Speed</b>\r\n\t\t\t\t<mat-slider [(value)]=\"this.time.fps\" invert min=\"0.01\" max=\"700\" step=\"1\"></mat-slider>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- <ngx-gist [gistId]=\"'bartergit/52e52c89a57e5ccdf030695972e8f371'\"></ngx-gist> -->\r\n<!-- todo array size -->\r\n<!-- todo speed -->","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}